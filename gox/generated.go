
// Code generated by gox; DO NOT EDIT.
package gox
import (
	"github.com/caleb-sideras/gox2/src/app/docs/routing/defining-routes"
	"github.com/caleb-sideras/gox2/src/app/docs/introduction_"
	"github.com/caleb-sideras/gox2/src/app/_test_/rn"
	"github.com/caleb-sideras/gox2/src/app/projects/peoplepedia"
	"github.com/caleb-sideras/gox2/src/app/docs/pages/static-pages"
	"github.com/caleb-sideras/gox2/src/app/_test_"
	"github.com/caleb-sideras/gox2/src/app/blog"
	"github.com/caleb-sideras/gox2/src/app/docs/routing/suspense"
	"github.com/caleb-sideras/gox2/src/app/docs/index/templ"
	"github.com/caleb-sideras/gox2/src/app/projects/caas/cluster"
	"github.com/caleb-sideras/gox2/src/app/docs/routing"
	"github.com/caleb-sideras/gox2/src/app/projects/goxFramework"
	"github.com/caleb-sideras/gox2/src/app/experience"
	"github.com/caleb-sideras/gox2/src/app/projects/musicgpt"
	"github.com/caleb-sideras/gox2/src/app/docs/pages"
	"github.com/caleb-sideras/gox2/src/app/docs/pages/templ"
	"github.com/caleb-sideras/gox2/src/app/projects"
	"github.com/caleb-sideras/gox2/src/app/docs/routing/dynamic-routes"
	"github.com/caleb-sideras/gox2/src/app/blog/temporarystandard"
	"github.com/caleb-sideras/gox2/src/app/projects/caas/processor"
	"github.com/caleb-sideras/gox2/src/app/docs/routing/static-pages-and-routes"
	"github.com/caleb-sideras/gox2/src/app/projects/tweetailyze"
	"github.com/caleb-sideras/gox2/src/app/projects/caas/segmentation"
	"github.com/caleb-sideras/gox2/src/app"
	"github.com/caleb-sideras/gox2/src/app/home_"
	"github.com/caleb-sideras/gox2/src/app/docs/projectStructure"
	"github.com/caleb-sideras/gox2/src/app/projects/caas"
	"github.com/caleb-sideras/gox2/src/app/docs/routing/hx-boost"
	"github.com/caleb-sideras/gox2/src/app/docs/index"
	"github.com/caleb-sideras/gox2/src/app/docs/routing/pages-and-index"
	"github.com/caleb-sideras/gox2/src/app/docs/routing/caching"
)

var IndexList = map[string]IndexDefaultFunc{
	"/docs/pages/templ" : app.Index,
	"/docs/pages" : app.Index,
	"/docs/routing" : app.Index,
	"/projects" : app.Index,
	"/" : app.Index,
	"/docs/routing/caching" : app.Index,
	"/blog" : app.Index,
	"/docs/index/templ" : app.Index,
	"/docs/routing/dynamic-routes" : app.Index,
	"/projects/caas" : app.Index,
	"/projects/musicgpt" : app.Index,
	"/projects/caas/processor" : app.Index,
	"/projects/caas/segmentation" : app.Index,
	"/docs/routing/hx-boost" : app.Index,
	"/experience" : app.Index,
	"/docs" : app.Index,
	"/{test}" : app.Index,
	"/projects/tweetailyze" : app.Index,
	"/docs/index" : app.Index,
	"/docs/project-structure" : app.Index,
	"/docs/pages/static-pages" : app.Index,
	"/{test}/rn" : app.Index,
	"/projects/gox-framework" : app.Index,
	"/projects/caas/cluster" : app.Index,
	"/docs/routing/defining-routes" : app.Index,
	"/docs/routing/static-pages-and-routes" : app.Index,
	"/blog/temporarystandard" : app.Index,
	"/docs/routing/pages-and-index" : app.Index,
	"/projects/peoplepedia" : app.Index,
	"/docs/routing/suspense" : app.Index,
}

var PageRenderList = []RenderDefault{
	{"/experience", experience.Page_},
	{"/blog", blog.Page_},
}

var RouteRenderList = []RenderDefault{
	{"/example", home.Example_},
	{"/{test}/example", test.Example_},
}

var PageHandleList = []Handler{
	{"/docs/pages/templ", docs_pages_templ.Page, DefaultHandler},
	{"/projects/gox-framework", gox.Page, ResReqHandler},
	{"/docs/index", docs_index.Page, DefaultHandler},
	{"/docs/index/templ", docs_index_templ.Page, DefaultHandler},
	{"/projects/caas/cluster", caas_cluster.Page, ResReqHandler},
	{"/projects/musicgpt", musicgpt.Page, ResReqHandler},
	{"/docs/pages", docs_pages.Page, DefaultHandler},
	{"/docs/routing", docs_routing.Page, DefaultHandler},
	{"/", home.Page, ResReqHandler},
	{"/docs/routing/pages-and-index", docs_routing_pagesandindex.Page, DefaultHandler},
	{"/docs/routing/defining-routes", docs_routingfundamentals.Page, DefaultHandler},
	{"/docs/routing/dynamic-routes", docs_routing_dynamicrouting.Page, DefaultHandler},
	{"/projects/peoplepedia", peoplepedia.Page, ResReqHandler},
	{"/docs", docs_introduction.Page, DefaultHandler},
	{"/docs/project-structure", docs_projectstructure.Page, DefaultHandler},
	{"/docs/pages/static-pages", docs_pages_staticpages.Page, DefaultHandler},
	{"/docs/routing/caching", docs_routing_caching.Page, DefaultHandler},
	{"/docs/routing/static-pages-and-routes", docs_routing_staticpagesandroutes.Page, DefaultHandler},
	{"/blog/temporarystandard", temporarystandard.Page, ResReqHandler},
	{"/projects/tweetailyze", tweetailyze.Page, ResReqHandler},
	{"/projects/caas", caas.Page, ResReqHandler},
	{"/docs/routing/suspense", docs_routing_suspense.Page, DefaultHandler},
	{"/projects", projects.Page, ResReqHandler},
	{"/projects/caas/processor", caas_processor.Page, ResReqHandler},
	{"/projects/caas/segmentation", caas_segmentation.Page, ResReqHandler},
	{"/{test}/rn", rn.Page, DefaultHandler},
	{"/docs/routing/hx-boost", docs_routing_hxboost.Page, DefaultHandler},
}

var RouteHandleList = []Handler{
	{"/projects/gox-framework/readme", gox.Readme, DefaultHandler},
	{"/projects/gox-framework/videos", gox.Videos, DefaultHandler},
	{"/projects/musicgpt/readme", musicgpt.Readme, DefaultHandler},
	{"/projects/musicgpt/videos", musicgpt.Videos, DefaultHandler},
	{"/{test}/example2", test.Example2, DefaultHandler},
	{"/projects/caas/readme", caas.Readme, DefaultHandler},
	{"/projects/caas/videos", caas.Videos, DefaultHandler},
}
